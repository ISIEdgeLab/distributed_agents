syntax = "proto3";

package iperf_agent;

service IperfAgent {
    rpc Configure(ConfigureArgs) returns (Response) {}
    rpc StartTraffic(StartTrafficArgs) returns (Response) {}
    rpc StopTraffic(StopTrafficArgs) returns (Response) {}

    rpc Status(StatusArgs) returns (stream StatusResponse) {}
}

message Response {
    bool success = 1;
    string comment = 2;
}

message ConfigureArgs {
    // "client" maps to "server"
    map<string, string> flows = 1;
    // If given append this string to iperf command line on client.
    string client_args = 2;
    string logdir = 3;
    // If given, include this in the log file name for easy marking.
    string runname = 4; 
    // If True, use JSON output.
    bool json = 5;
}

message StartTrafficArgs {
}

message StopTrafficArgs {
}

message StatusArgs {
    // if given, onlyu return the status of the given hosts, else return all.
   repeated string hosts = 1;
   int32 count = 2;  // How many messages to return (once a second or so...)
}

message StatusResponse {
    bool success = 1;
    string comment = 2;

    string transfer = 3;
    string bandwidth = 4;
    int32 retries = 5;
}
